C51 COMPILER V9.59.0.0   FUNC                                                              01/13/2019 00:50:24 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FUNC
OBJECT MODULE PLACED IN .\Objects\Func.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Func.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Project_Volter) DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\Func.lst) TABS(2) OBJECT(.\Objects\Func.obj)

line level    source

   1          #include "Func.h"
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          
   6          
   7          sbit erflags=PSW^5;
   8          
   9          extern data uchar  param[9];
  10          extern data uint para1,para2;
  11          extern data da;
  12          extern uchar disp[8];
  13          extern uchar d2;
  14          extern uchar k;
  15          extern unsigned int timing=0;
  16          
  17          data uint g _at_ 0x2f;
  18          
  19          void Calculate()
  20          {
  21   1        uint g1,g2;
  22   1        uint freq;
  23   1        if(param[6]==1)
  24   1        {
  25   2          freq=param[1];
  26   2          g=10^6/freq/32;
  27   2          para1=65536-g;
  28   2          para2=param[2];
  29   2          da=0;
  30   2          sen:  erflags=0;              
  31   2            Start( );               
  32   2            SendByte(0x90);         
  33   2            cAck( );              
  34   2            if(erflags==1) goto sen;      
  35   2            SendByte(0x40);           
  36   2            cAck( );              
  37   2            if(erflags==1) goto sen;
  38   2            SendByte(0x91);
  39   2            cAck(); 
  40   2            if(erflags==1) goto sen;
  41   2        }
  42   1        if(param[6]==2)
  43   1        {
  44   2          freq=param[3]*1000+param[4];
  45   2          g1=10000/freq*param[5];
  46   2          g2=10000/freq*(100-param[5]);
  47   2          para1=65536-g1;
  48   2          para2=65536-g2;
  49   2        }
  50   1      }
  51          
  52          void ParamProcess()
  53          {
  54   1        uchar freq;
C51 COMPILER V9.59.0.0   FUNC                                                              01/13/2019 00:50:24 PAGE 2   

  55   1        if(disp[2]==15)
  56   1        {
  57   2          if(disp[1]==1)
  58   2            param[1]=disp[6]*10+disp[7]; 
  59   2          else  
  60   2          {
  61   3            freq=disp[5]*100+disp[6]*10+disp[7];
  62   3            param[3]=disp[4];
  63   3            param[4]=freq%256;
  64   3          } 
  65   2        }
  66   1        else
  67   1        {
  68   2          if(disp[1]==1) 
  69   2            param[2]=disp[6]*10+disp[7]; 
  70   2          else
  71   2            param[5]=disp[6]*10+disp[7];
  72   2        }
  73   1      }
  74          
  75          void NumProcess(unsigned int keynum)
  76          {
  77   1        uchar i;
  78   1        if(k>=4)
  79   1        {
  80   2          if(disp[1]==2&d2==15)                               //Square Wave-Frequence Mode
  81   2          {
  82   3            if(k==4)
  83   3            {
  84   4              if(keynum==1)                                     //Max=1000Hz
  85   4              {
  86   5                disp[k]=1;
  87   5                for(i=5;i<8;i++)
  88   5                {
  89   6                  disp[i]=0;
  90   6                }
  91   5              }
  92   4              else if(keynum==0)
  93   4                disp[k]=keynum;
  94   4            }
  95   3            else
  96   3            {
  97   4              if(disp[4]==0)
  98   4              {
  99   5                disp[4]=0;                                        //disp[4] off
 100   5                disp[k]=keynum;
 101   5              }
 102   4            }
 103   3          }
 104   2          else if(k==6)
 105   2          {
 106   3            if(param[6]==2&d2==10)
 107   3            {
 108   4              if(keynum>=2&&keynum<=7)
 109   4                disp[k]=keynum;
 110   4            }
 111   3            else
 112   3            {
 113   4              if(keynum>=1&&keynum<5)                             //Sin Wave-Frequence Mode
 114   4                disp[k]=keynum;
 115   4              else if(keynum==5)                                  //Max=50Hz
 116   4              {
C51 COMPILER V9.59.0.0   FUNC                                                              01/13/2019 00:50:24 PAGE 3   

 117   5                disp[k]=keynum;
 118   5                disp[7]=0;
 119   5              }
 120   4            }
 121   3          }
 122   2          else                                                    //maybe else if?
 123   2          {
 124   3            if(param[6]==1&d2==10&&disp[6]==5)                    //Max=50Hz
 125   3            {
 126   4              disp[7]=0;
 127   4            }
 128   3            else
 129   3              disp[k]=keynum;
 130   3          }
 131   2        }
 132   1      }
 133          
 134          
 135          uint keyscan()
 136          {
 137   1        uint keynum;
 138   1        uchar a,b;
 139   1        P2=0xf0;
 140   1        delay(5); 
 141   1        a=P2;
 142   1        P2=0x0f;
 143   1        delay(5);
 144   1        b=P2;
 145   1        a=a|b;
 146   1        if(a!=0xff)
 147   1        {
 148   2          while(P2!=0x0f);
 149   2          switch(a)
 150   2          {
 151   3            case 0xee: keynum=0;break;
 152   3            case 0xde: keynum=1;break;
 153   3            case 0xbe: keynum=2;break;
 154   3            case 0x7e: keynum=3;break;
 155   3            case 0xed: keynum=4;break;
 156   3            case 0xdd: keynum=5;break;
 157   3            case 0xbd: keynum=6;break;
 158   3            case 0x7d: keynum=7;break;
 159   3            case 0xeb: keynum=10;break;//左移
 160   3            case 0xdb: keynum=8;break;
 161   3            case 0xbb: keynum=9;break;
 162   3            case 0x7b: keynum=20;break;//右移
 163   3            case 0xe7: keynum=12;break;//设置键
 164   3            case 0xd7: keynum=13;break;//选择波形
 165   3            case 0xb7: keynum=14;break;//选择参数
 166   3            case 0x77: keynum=15; //确认键
 167   3          }
 168   2        }
 169   1        else
 170   1          keynum=255;
 171   1        return keynum;
 172   1      }
 173          
 174          void read24c02(void)
 175          {
 176   1        uchar temp,i;
 177   1        sen:  erflags=0;
 178   1          Start();
C51 COMPILER V9.59.0.0   FUNC                                                              01/13/2019 00:50:24 PAGE 4   

 179   1          SendByte(0xa0);         
 180   1          cAck( );              
 181   1          if(erflags==1) goto sen;      
 182   1          SendByte(0x00);           
 183   1          cAck( );              
 184   1          if(erflags==1) goto sen;
 185   1        temp=RcvByte();
 186   1        Ack();
 187   1        if(temp==0x55)
 188   1        {
 189   2          param[0]=0x55;
 190   2          for(i=1;i<8;i++)
 191   2          {
 192   3            Ack();
 193   3            param[i]=RcvByte();
 194   3          }
 195   2          NoAck();
 196   2          Stop();
 197   2        }
 198   1        else
 199   1        {
 200   2          write24c02();
 201   2          Stop();
 202   2        }
 203   1      }
 204          void write24c02(void)
 205          {
 206   1        uchar i;
 207   1        sen:  erflags=0;              
 208   1          Start( );               
 209   1          SendByte(0xa0);         
 210   1          cAck( );              
 211   1          if(erflags==1) goto sen;      
 212   1          SendByte(0x00);           
 213   1          cAck( );              
 214   1          if(erflags==1) goto sen;
 215   1          SendByte(0xa1);           
 216   1          cAck( );              
 217   1          if(erflags==1) goto sen;
 218   1        for(i=0;i<8;i++)
 219   1        {
 220   2          SendByte(param[i]);             
 221   2          cAck( );
 222   2        }
 223   1        Stop();
 224   1      }
 225          
 226          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    895    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
